{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["App","React","useState","file","setFile","file2","setFile2","chapter","setChapter","setConfig","row","setRow","row2","setRow2","history","setHistory","data","setData","data2","setData2","getData","a","fetch","result","json","console","log","currentChapters","Math","max","currentRow","num","language","i","fileChange","v","event","reader","FileReader","onload","text","target","split","readAsText","files","pageTurn","name","way","updateData","refresh","JSON","stringify","api","item0","_row","length","item1","_row2","i2","mode","res0","res1","useEffect","className","type","id","onChange","bind","this","undefined","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7c804bb6.chunk.js","sourcesContent":["import React, {  useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  let [file, setFile] = React.useState(\"请输入文件\");\n  let [file2, setFile2] = React.useState(\"请输入文件\");\n  // let [color, setColor] = React.useState('');\n\n  let [chapter, setChapter] = React.useState();\n  let [config, setConfig] = React.useState();\n  let [row, setRow] = React.useState();\n  let [row2, setRow2] = React.useState();\n  let [history, setHistory] = React.useState();\n  let [data, setData] = React.useState();\n  let [data2, setData2] = React.useState();\n\n\n  async function getData() {\n    let result = await fetch(\"http://127.0.0.1:8000/config/get/ATG\");\n    result = await result.json();\n    console.log(result);\n    setConfig(result);\n    setChapter(result.currentChapters);\n    setRow(Math.max(...result.currentRow[0]));\n    setRow2(Math.max(...result.currentRow[1]));\n    setHistory(result.history);\n    console.log(result.currentRow, 234234);\n\n    let num = result.currentChapters;\n    for (let language of [\"chinese\", \"english\"]) {\n      result = await fetch(`http://127.0.0.1:8000/ATG/${language}/${num}`);\n      result = await result.json();\n      console.log(result);\n      switch (language) {\n        case \"chinese\":\n          setFile(result);\n          setRow((i) => {\n            setData(result[i]);\n            return i;\n          });\n          break;\n        case \"english\":\n          setFile2(result);\n          setRow2((i) => {\n            setData2(result[i]);\n            return i;\n          });\n          break;\n      }\n    }\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function fileChange(v, event) {\n    // 读取文件:\n    let reader = new FileReader();\n    reader.onload = function (event) {\n      const text = event.target.result.split(\"\\n\");\n      switch (v) {\n        case 0:\n          setFile(text);\n          // setData(text[0]);\n          break;\n        case 1:\n          setFile2(text);\n          // setData2(text[0]);\n          break;\n      }\n    };\n    reader.readAsText(event.target.files[0]);\n  }\n  function pageTurn(name, way, event) {\n    let currentRow = [[row], [row2]];\n    async function updateData(i,refresh) {\n      let data = JSON.stringify(i);\n      let api = `http://127.0.0.1:8000/config/update/ATG?config=${data}`;\n      let result = await fetch(api);\n      result = await result.json();\n      console.log(1234, result, data);\n      if (refresh) {\n         getData();\n      }\n    }\n\n    function item0() {\n      let _row = way ? row + 1 : row - 1;\n      setRow(_row);\n      setData(file[_row]);\n      if (_row >= file.length) {\n        return \"over\";\n      }\n      if (_row < 0) {\n        return 'pass'\n      }\n      currentRow[0] = [_row];\n      setConfig((i) => {\n        i = { ...i, currentRow: currentRow };\n        updateData(i);\n        return i;\n      });\n    }\n    function item1() {\n      let _row2 = way ? row2 + 1 : row2 - 1;\n      setRow2(_row2);\n      setData2(file2[_row2]);\n      if (_row2 >= file2.length) {\n        return 'over'\n      }\n      if (_row2 < 0) {\n        return \"pass\";\n      }\n      currentRow[1] = [_row2];\n      console.log(currentRow, _row2, row2, \"hhhhh\");\n      setConfig((i2) => {\n        i2 = { ...i2, currentRow: currentRow };\n        console.log(i2, currentRow, \"6666\");\n        updateData(i2);\n        return i2;\n      });\n\n    }\n    function chapter(mode) {\n      setConfig((i) => {\n        let currentChapters=mode=='up'?i.currentChapters - 1:i.currentChapters +1\n        i = { ...i, currentChapters: currentChapters, currentRow: [[0], [0]] };\n        updateData(i,true);\n        return i;\n      });\n\n    }\n    switch (name) {\n      case \"all\":\n        let res0=item0();\n        let res1 = item1();\n        if (res0 == 'pass' && res1 == 'pass') {\n           chapter(\"up\");\n        }\n        if (res0 == \"over\" && res1 == \"over\") {\n          chapter(\"down\");\n        }\n        break;\n      case 0:\n        item0();\n        break;\n      case 1:\n        item1();\n        break;\n      case \"chapterUp\":\n        chapter(\"up\");\n        break;\n      case \"chapterDown\":\n        chapter(\"down\");\n        break;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"file\">\n          <input type=\"file\" id=\"input\" onChange={fileChange.bind(this, 0)} />\n          <input type=\"file\" id=\"input2\" onChange={fileChange.bind(this, 1)} />\n        </div>\n        <div>\n          第{chapter}章, {row}行, {row2}行, {history ? history[1][0][0][1] : undefined}\n        </div>\n        <div id=\"reader\" className=\"content\">\n          <div>{data}</div>\n          <div>{data2}</div>\n        </div>\n        <div className=\"footer\">\n          <button id=\"up\" onClick={pageTurn.bind(this, 0, 0)}>\n            上0\n          </button>\n          <button id=\"down\" onClick={pageTurn.bind(this, 0, 1)}>\n            下0\n          </button>\n          <button id=\"up2\" onClick={pageTurn.bind(this, 1, 0)}>\n            上1\n          </button>\n          <button id=\"down2\" onClick={pageTurn.bind(this, 1, 1)}>\n            下1\n          </button>\n          <button id=\"upAll\" onClick={pageTurn.bind(this, \"all\", 0)}>\n            上全\n          </button>\n          <button id=\"downAll\" onClick={pageTurn.bind(this, \"all\", 1)}>\n            下全\n          </button>\n          <button id=\"chapterUp\" onClick={pageTurn.bind(this, \"chapterUp\", 0)}>\n            上章\n          </button>\n          <button id=\"chapterDown\" onClick={pageTurn.bind(this, \"chapterDown\", 1)}>\n            下章\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}