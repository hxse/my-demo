{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["gamepadIndex","window","addEventListener","e","gp","navigator","getGamepads","gamepad","index","console","log","id","buttons","length","axes","mountDict","text","document","querySelector","setInterval","undefined","forEach","item","buttonIndex","idx","pressed","click","App","contentPage","way","contentDiv","scrollTop","clientHeight","contentBottom","getBoundingClientRect","bottom","querySelectorAll","span","spanTop","top","spanBtm","React","useState","translate","setTranslate","translate2","setTranslate2","trans2str","json","Object","keys","map","i","join","mouseEnterEvent","event","a","word","trim","replace","dataArr","stem","fetch","response","data","phonetic","translation","push","file","setFile","file2","setFile2","chapter","setChapter","setConfig","row","setRow","row2","setRow2","history","setHistory","setData","data2","setData2","getData","result","currentChapters","Math","max","currentRow","num","language","fileChange","v","reader","FileReader","onload","target","split","readAsText","files","pageTurn","name","updateData","refresh","JSON","stringify","api","item0","_row","item1","_row2","i2","mode","res0","res1","useEffect","className","type","onChange","bind","this","onMouseEnter","onClick","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5089624c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Div100vh from \"react-div-100vh\";\n\nlet gamepadIndex;\nwindow.addEventListener(\"gamepadconnected\", function (e) {\n  let gp = navigator.getGamepads()[e.gamepad.index];\n  console.log(\n    \"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\n    gp.index,\n    gp.id,\n    gp.buttons.length,\n    gp.axes.length\n  );\n  gamepadIndex = e.gamepad.index;\n});\n\nlet buttons = [false, false, false, false, false, false];\nsetInterval(() => {\n  if (gamepadIndex !== undefined) {\n    const myGamepad = navigator.getGamepads()[gamepadIndex];\n    myGamepad.buttons.forEach((item, buttonIndex) => {\n      let keyBinds = [\n        [0, \"#up\"], //A\n        [1, \"#down\"], //B\n        [2, \"#up2\"], //X\n        [3, \"#down2\"], //Y\n        [4, \"#upAll\"], //R\n        [5, \"#downAll\"], //L\n      ];\n      for (let [idx, id] of keyBinds) {\n        if (buttonIndex == idx) {\n          if (item.pressed) {\n            if (buttons[idx] == false) {\n              document.querySelector(id).click();\n            }\n            buttons[idx] = true;\n          } else {\n            buttons[idx] = false;\n          }\n        }\n      }\n    });\n  }\n}, 100);\n\nfunction mountDict(text) {\n  let content1 = document.querySelector(\"#content1\");\n  // content1.textContent=text\n  // let textArr = text.split(' ')\n  // for (let word of textArr) {\n  //   let wordSpan = <span>{word}</span>\n  //   content1.appendChild(wordSpan)\n  // }\n}\nfunction App() {\n  function contentPage(id, way) {\n    let contentDiv = document.querySelector(id);\n    contentDiv.scrollTop =\n      way == \"down\" ? contentDiv.scrollTop + contentDiv.clientHeight : contentDiv.scrollTop - contentDiv.clientHeight;\n    let contentBottom = contentDiv.getBoundingClientRect().bottom;\n    for (let span of contentDiv.querySelectorAll(\"span\")) {\n      let spanTop = span.getBoundingClientRect().top;\n      let spanBtm = span.getBoundingClientRect().bottom;\n      if (spanTop < contentBottom && spanBtm > contentBottom) {\n        console.log(span);\n        contentDiv.scrollTop =\n          way == \"down\"\n            ? contentDiv.scrollTop + (span.getBoundingClientRect().top - contentBottom)\n            : contentDiv.scrollTop - (contentBottom - span.getBoundingClientRect().bottom);\n      }\n    }\n  }\n\n  let [translate, setTranslate] = React.useState();\n  let [translate2, setTranslate2] = React.useState();\n  function trans2str(json) {\n    return json\n      ? Object.keys(json)\n          .map((i) => `${i}:${json[i]}`)\n          .join(\"\\n\")\n      : null;\n  }\n  async function mouseEnterEvent(event, text) {\n    let word = event.i.trim().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()…]/g, \"\");\n\n    let dataArr = [];\n    for (let stem of [false, true]) {\n      const response = await fetch(`http://127.0.0.1:8000/dict/${word}?stem=${stem}`);\n      const json = await response.json();\n      let data = json ? { word: json.word, phonetic: json.phonetic, translate: json.translation } : {};\n      dataArr.push(data);\n      console.log(data);\n    }\n    if (dataArr[1].word == dataArr[0].word) {\n      dataArr[1] = null;\n    }\n    setTranslate(dataArr[0]);\n    setTranslate2(dataArr[1]);\n  }\n\n  let [key, setKey] = React.useState();\n  document.addEventListener(\"keydown\", (e) => {\n    // console.log(\"按下按键\", e);\n  });\n\n  // let [button, setButton] = React.useState();\n\n  let [file, setFile] = React.useState(\"请输入文件\");\n  let [file2, setFile2] = React.useState(\"请输入文件\");\n  // let [color, setColor] = React.useState('');\n\n  let [chapter, setChapter] = React.useState();\n  let [config, setConfig] = React.useState();\n  let [row, setRow] = React.useState();\n  let [row2, setRow2] = React.useState();\n  let [history, setHistory] = React.useState();\n  let [data, setData] = React.useState();\n  let [data2, setData2] = React.useState();\n\n  async function getData() {\n    let result = await fetch(\"http://127.0.0.1:8000/config/get/ATG\");\n    result = await result.json();\n    // console.log(result);\n    setConfig(result);\n    setChapter(result.currentChapters);\n    setRow(Math.max(...result.currentRow[0]));\n    setRow2(Math.max(...result.currentRow[1]));\n    setHistory(result.history);\n\n    let num = result.currentChapters;\n    for (let language of [\"chinese\", \"english\"]) {\n      result = await fetch(`http://127.0.0.1:8000/ATG/${language}/${num}`);\n      result = await result.json();\n      switch (language) {\n        case \"chinese\":\n          setFile(result);\n          setRow((i) => {\n            setData(result[i]);\n            return i;\n          });\n          break;\n        case \"english\":\n          setFile2(result);\n          setRow2((i) => {\n            setData2(result[i]);\n            mountDict(result[i]);\n            return i;\n          });\n          break;\n      }\n    }\n  }\n  useEffect(() => {\n    getData();\n    console.log(\"初始化运行\");\n  }, []);\n\n  function fileChange(v, event) {\n    // 读取文件:\n    let reader = new FileReader();\n    reader.onload = function (event) {\n      const text = event.target.result.split(\"\\n\");\n      switch (v) {\n        case 0:\n          setFile(text);\n          break;\n        case 1:\n          setFile2(text);\n          break;\n      }\n    };\n    reader.readAsText(event.target.files[0]);\n  }\n  function pageTurn(name, way, event) {\n    let currentRow = [[row], [row2]];\n    async function updateData(i, refresh) {\n      let data = JSON.stringify(i);\n      let api = `http://127.0.0.1:8000/config/update/ATG?config=${data}`;\n      let result = await fetch(api);\n      result = await result.json();\n      if (refresh) {\n        getData();\n      }\n    }\n\n    function item0() {\n      let _row = way ? row + 1 : row - 1;\n      setRow(_row);\n      setData(file[_row]);\n      if (_row >= file.length) {\n        return \"over\";\n      }\n      if (_row < 0) {\n        return \"pass\";\n      }\n      currentRow[0] = [_row];\n      setConfig((i) => {\n        i = { ...i, currentRow: currentRow };\n        updateData(i);\n        return i;\n      });\n    }\n    function item1() {\n      let _row2 = way ? row2 + 1 : row2 - 1;\n      setRow2(_row2);\n      setData2(file2[_row2]);\n      mountDict(file2[_row2]);\n      if (_row2 >= file2.length) {\n        return \"over\";\n      }\n      if (_row2 < 0) {\n        return \"pass\";\n      }\n      currentRow[1] = [_row2];\n      setConfig((i2) => {\n        i2 = { ...i2, currentRow: currentRow };\n        updateData(i2);\n        return i2;\n      });\n    }\n    function chapter(mode) {\n      setConfig((i) => {\n        let currentChapters = mode == \"up\" ? i.currentChapters - 1 : i.currentChapters + 1;\n        i = { ...i, currentChapters: currentChapters, currentRow: [[0], [0]] };\n        updateData(i, true);\n        return i;\n      });\n    }\n    switch (name) {\n      case \"all\":\n        let res0 = item0();\n        let res1 = item1();\n        if (res0 == \"pass\" && res1 == \"pass\") {\n          chapter(\"up\");\n        }\n        if (res0 == \"over\" && res1 == \"over\") {\n          chapter(\"down\");\n        }\n        break;\n      case 0:\n        item0();\n        break;\n      case 1:\n        item1();\n        break;\n      case \"chapterUp\":\n        chapter(\"up\");\n        break;\n      case \"chapterDown\":\n        chapter(\"down\");\n        break;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Div100vh className=\"container\">\n        <div className=\"file\">\n          <input type=\"file\" id=\"input\" onChange={fileChange.bind(this, 0)} />\n          <input type=\"file\" id=\"input2\" onChange={fileChange.bind(this, 1)} />\n        </div>\n        <div>\n          第{chapter}章, {row}行, {row2}行, {history ? history[1][0][0][1] : undefined}\n          <hr className=\"hr-edge-weak\" />\n        </div>\n        <div id=\"reader\" className=\"content\">\n          <div id=\"content1\">\n            {data2\n              ? data2.split(\" \").map((i) => <span onMouseEnter={mouseEnterEvent.bind(this, { i })}>{i} </span>)\n              : undefined}\n          </div>\n          <div className=\"hr-wrapper\">\n            <hr className=\"hr-twill\" onClick={contentPage.bind(this, \"#content1\", \"up\")} />\n            <hr className=\"hr-twill\" onClick={contentPage.bind(this, \"#content1\", \"down\")} />\n          </div>\n          <div id=\"content2\">{data}</div>\n          <div className=\"hr-wrapper\">\n            <hr className=\"hr-twill\" onClick={contentPage.bind(this, \"#content2\", \"up\")} />\n            <hr className=\"hr-twill\" onClick={contentPage.bind(this, \"#content2\", \"down\")} />\n          </div>\n          <div id=\"translate\">\n            <div>{trans2str(translate)}</div>\n            <div>{trans2str(translate2)}</div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <button id=\"up\" onClick={pageTurn.bind(this, 0, 0)}>\n            上0\n          </button>\n          <button id=\"down\" onClick={pageTurn.bind(this, 0, 1)}>\n            下0\n          </button>\n          <button id=\"up2\" onClick={pageTurn.bind(this, 1, 0)}>\n            上1\n          </button>\n          <button id=\"down2\" onClick={pageTurn.bind(this, 1, 1)}>\n            下1\n          </button>\n          <button id=\"upAll\" onClick={pageTurn.bind(this, \"all\", 0)}>\n            上全\n          </button>\n          <button id=\"downAll\" onClick={pageTurn.bind(this, \"all\", 1)}>\n            下全\n          </button>\n          <button id=\"chapterUp\" onClick={pageTurn.bind(this, \"chapterUp\", 0)}>\n            上章\n          </button>\n          <button id=\"chapterDown\" onClick={pageTurn.bind(this, \"chapterDown\", 1)}>\n            下章\n          </button>\n        </div>\n      </Div100vh>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}